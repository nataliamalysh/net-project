{"version":3,"sources":["./src/$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/core/core.module.ts","./src/app/core/data-filter.service.ts","./src/app/core/data.service.ts","./src/app/core/sorter.ts","./src/app/core/trackby.service.ts","./src/app/counter/counter.component.html","./src/app/counter/counter.component.ts","./src/app/customers/customer-edit-reactive.component.html","./src/app/customers/customer-edit-reactive.component.ts","./src/app/customers/customer-edit.component.ts","./src/app/customers/customers-grid.component.html","./src/app/customers/customers-grid.component.ts","./src/app/customers/customers.component.html","./src/app/customers/customers.component.ts","./src/app/fetch-data/fetch-data.component.html","./src/app/fetch-data/fetch-data.component.ts","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/shared/ensureModuleLoadedOnceGuard.ts","./src/app/shared/filter-textbox/filter-textbox.component.ts.FilterTextboxComponent.html","./src/app/shared/filter-textbox/filter-textbox.component.ts","./src/app/shared/pagination/pagination.component.html","./src/app/shared/pagination/pagination.component.ts","./src/app/shared/pipes/capitalize.pipe.ts","./src/app/shared/pipes/trim.pipe.ts","./src/app/shared/property-resolver.ts","./src/app/shared/shared.module.ts","./src/app/shared/validation.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CustomersComponent } from './customers/customers.component';\nimport { CustomersGridComponent } from './customers/customers-grid.component';\nimport { CustomerEditComponent } from './customers/customer-edit.component';\nimport { CustomerEditReactiveComponent } from './customers/customer-edit-reactive.component';\nimport { HomeComponent } from './home/home.component';\nimport { CounterComponent } from './counter/counter.component';\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: 'counter', component: CounterComponent },\n  { path: 'fetch-data', component: FetchDataComponent },\n  { path: 'customers', component: CustomersComponent },\n  //{ path: 'customers/:id', component: CustomerEditComponent},\n  { path: 'customers/:id', component: CustomerEditReactiveComponent },\n  { path: '**', pathMatch: 'full', redirectTo: '/customers' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n  static components = [HomeComponent, FetchDataComponent, CounterComponent, CustomersComponent, CustomersGridComponent, CustomerEditComponent, CustomerEditReactiveComponent];\n}\n","<body>\n    <div class=\"container\">\n        <router-outlet></router-outlet>\n    </div>\n</body>\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-component',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CounterComponent } from './counter/counter.component';\r\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { CoreModule } from './core/core.module';\r\nimport { SharedModule } from './shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AppRoutingModule.components,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    CounterComponent,\r\n    FetchDataComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    CoreModule,\r\n    SharedModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { HttpClientModule, HttpClientXsrfModule } from '@angular/common/http';\n\nimport { DataService } from './data.service';\nimport { DataFilterService } from './data-filter.service';\nimport { Sorter } from './sorter';\nimport { TrackByService } from './trackby.service';\nimport { EnsureModuleLoadedOnceGuard } from '../shared/ensureModuleLoadedOnceGuard';\n\n@NgModule({\n  imports: [ \n    HttpClientModule, \n    // Can use to override default names for XSRF cookie and header\n    // The default cookie/header names are shown below\n    // HttpClientXsrfModule.withOptions({\n    //   cookieName: 'XSRF-TOKEN',\n    //   headerName: 'X-XSRF-TOKEN',\n    // })\n  ],\n  // Providers are defined in each service for this app. \n  // But, the following is another option\n  // providers: [\n  //   DataService, DataFilterService, Sorter, TrackByService\n  // ] \n})\nexport class CoreModule extends EnsureModuleLoadedOnceGuard {    //Ensure that CoreModule is only loaded into AppModule\n\n  //Looks for the module in the parent injector to see if it's already been loaded (only want it loaded once)\n  constructor( @Optional() @SkipSelf() parentModule: CoreModule) {\n    super(parentModule);\n  }  \n\n}\n\n\n\n","import { Injectable } from '@angular/core';\nimport { propertyResolver } from '../shared/property-resolver';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DataFilterService {\n    \n    filter(datasource: any[], filterProperties: string[], filterData: string) {\n        if (datasource && filterProperties && filterData) {\n            filterData = filterData.toUpperCase();\n            const filtered = datasource.filter(item => {\n                let match = false;\n                for (const prop of filterProperties) {\n                    let propVal: any = '';\n                    \n                    //Account for nested properties like 'state.name'\n                    if (prop.indexOf('.') > -1) {\n                        propVal = propertyResolver.resolve(prop, item);\n                        if (propVal) {\n                            propVal = propVal.toString().toUpperCase();\n                        }\n                    }\n                    else {\n                        if (item[prop]) {\n                            propVal = item[prop].toString().toUpperCase();\n                        }                        \n                    }\n                    \n                    if (propVal.indexOf(filterData) > -1) {\n                        match = true;\n                        break;\n                    }\n                };\n                return match;\n            });\n            return filtered;\n        }\n        else {\n            return datasource;\n        }\n    }\n    \n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\nimport { Observable, } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { ICustomer, IOrder, IState, IPagedResults, ICustomerResponse } from '../shared/interfaces';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DataService {\n    baseUrl = environment.apiUrl;\n    baseCustomersUrl = this.baseUrl + 'customers';\n    baseStatesUrl = this.baseUrl + 'states'\n\n    constructor(private http: HttpClient) { }\n\n    getCustomers(): Observable<ICustomer[]> {\n        return this.http.get<ICustomer[]>(this.baseCustomersUrl)\n            .pipe(\n                map(customers => {\n                    this.calculateCustomersOrderTotal(customers);\n                    return customers;\n                }),\n                catchError(this.handleError)\n            );\n    }\n\n    getCustomersPage(page: number, pageSize: number): Observable<IPagedResults<ICustomer[]>> {\n        return this.http.get<ICustomer[]>(`${this.baseCustomersUrl}/page/${page}/${pageSize}`, { observe: 'response' })\n            .pipe(\n                map((res) => {\n                    //Need to observe response in order to get to this header (see {observe: 'response'} above)\n                    const totalRecords = +res.headers.get('x-inlinecount');\n                    let customers = res.body as ICustomer[];\n                    this.calculateCustomersOrderTotal(customers);\n                    return {\n                        results: customers,\n                        totalRecords: totalRecords\n                    };\n                }),\n                catchError(this.handleError)\n            );\n    }\n\n    getCustomer(id: string): Observable<ICustomer> {\n        return this.http.get<ICustomer>(this.baseCustomersUrl + '/' + id)\n            .pipe(\n                catchError(this.handleError)\n            );\n    }\n\n    insertCustomer(customer: ICustomer): Observable<ICustomer> {\n        return this.http.post<ICustomerResponse>(this.baseCustomersUrl, customer)\n            .pipe(\n                map((data) => {\n                    console.log('insertCustomer status: ' + data.status);\n                    return data.customer;\n                }),\n                catchError(this.handleError)\n            );\n    }\n\n    updateCustomer(customer: ICustomer): Observable<ICustomer> {\n        return this.http.put<ICustomerResponse>(this.baseCustomersUrl + '/' + customer.id, customer)\n            .pipe(\n                map((data) => {\n                    console.log('updateCustomer status: ' + data.status);\n                    return data.customer;\n                }),\n                catchError(this.handleError)\n            );\n    }\n\n    deleteCustomer(id: string): Observable<boolean> {\n        return this.http.delete<boolean>(this.baseCustomersUrl + '/' + id)\n            .pipe(\n                catchError(this.handleError)\n            );\n    }\n\n    getStates(): Observable<IState[]> {\n        return this.http.get<IState[]>(this.baseStatesUrl)\n            .pipe(\n                catchError(this.handleError)\n            )\n\n    }\n\n    calculateCustomersOrderTotal(customers: ICustomer[]) {\n        for (let customer of customers) {\n            if (customer && customer.orders) {\n                let total = 0;\n                for (let order of customer.orders) {\n                    total += (order.price * order.quantity);\n                }\n                customer.orderTotal = total;\n            }\n        }\n    }\n\n    private handleError(error: HttpErrorResponse) {\n        console.error('server error:', error);\n        if (error.error instanceof Error) {\n            let errMessage = error.error.message;\n            return Observable.throw(errMessage);\n        }\n        return Observable.throw(error || 'ASP.NET Core server error');\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { propertyResolver } from '../shared/property-resolver';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class Sorter {\n\n\tproperty: string = null;\n\tdirection: number = 1;\n\n    sort(collection: any[], prop: any) {\n        this.property = prop;\n        this.direction = (this.property === prop) ? this.direction * -1 : 1;\n\n        collection.sort((a: any,b: any) => {\n            let aVal: any;\n            let bVal: any;\n            \n            //Handle resolving complex properties such as 'state.name' for prop value\n            if (prop && prop.indexOf('.') > -1) {\n              aVal = propertyResolver.resolve(prop, a);\n              bVal = propertyResolver.resolve(prop, b);\n            }\n            else {            \n              aVal = a[prop];\n              bVal = b[prop];\n            }\n            \n            //Fix issues that spaces before/after string value can cause such as ' San Francisco'\n            if (this.isString(aVal)) aVal = aVal.trim().toUpperCase();\n            if (this.isString(bVal)) bVal = bVal.trim().toUpperCase();\n          \n            if(aVal === bVal){\n                return 0;\n            }\n            else if (aVal > bVal){\n                return this.direction * -1;\n            }\n            else {\n                return this.direction * 1;\n            }\n        });\n    }\n    \n    isString(val: any) : boolean {\n      return (val && (typeof val === 'string' || val instanceof String));\n    }\n\n}","import { Injectable } from '@angular/core';\n\nimport { ICustomer } from '../shared/interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TrackByService {\n  \n  customer(index: number, customer: ICustomer) {\n    return customer.id;\n  }\n  \n}","<h1>Counter</h1>\r\n\r\n<p>This is a simple example of an Angular component.</p>\r\n\r\n<p aria-live=\"polite\">Current count: <strong>{{ currentCount }}</strong></p>\r\n\r\n<button class=\"btn btn-primary\" (click)=\"incrementCounter()\">Increment</button>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-counter-component',\r\n  templateUrl: './counter.component.html'\r\n})\r\nexport class CounterComponent {\r\n  public currentCount = 0;\r\n\r\n  public incrementCounter() {\r\n    this.currentCount++;\r\n  }\r\n}\r\n","<div>\n  <header>\n      <h3>\n          <span class=\"glyphicon glyphicon-user\"></span>\n          {{ customer.firstName }} {{ customer.lastName }}\n      </h3>\n  </header>\n  <br />\n  <form [formGroup]=\"customerForm\" (ngSubmit)=\"submit(customerForm)\" class=\"editForm\" novalidate>\n    <div class=\"form-group\">\n      <label>First Name</label>\n      <input type=\"text\" class=\"form-control\" formControlName=\"firstName\" />\n      <div class=\"alert alert-danger\" [hidden]=\"customerForm.controls.firstName.untouched || customerForm.controls.firstName.valid\">First Name is required</div>\n    </div>\n    <div class=\"form-group\">\n      <label>Last Name</label>\n      <input type=\"text\" class=\"form-control\" formControlName=\"lastName\">\n      <div class=\"alert alert-danger\" [hidden]=\"customerForm.controls.lastName.untouched || customerForm.controls.lastName.valid\">Last Name is required</div>\n    </div>\n    <div class=\"form-group\">\n      <label>Gender</label>\n      <br />\n      <div class=\"radio\">\n        <label>\n          <input type=\"radio\" name=\"gender\" formControlName=\"gender\" value=\"Male\" />\n          Male\n        </label>\n      </div>\n      <div class=\"radio\">\n        <label>\n          <input type=\"radio\" name=\"gender\" formControlName=\"gender\" value=\"Female\"  /> \n          Female\n        </label>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label>Email</label>\n      <input type=\"email\" class=\"form-control\" formControlName=\"email\" />\n      <div class=\"alert alert-danger\" [hidden]=\"customerForm.controls.email.untouched || customerForm.controls.email.valid\">Email is required and must be valid</div>\n    </div>\n    <div class=\"form-group\">\n      <label>Address</label>\n      <input type=\"text\" class=\"form-control\" formControlName=\"address\" />\n      <div class=\"alert alert-danger\" [hidden]=\"customerForm.controls.address.untouched || customerForm.controls.address.valid\">Address is required</div>\n    </div>\n    <div class=\"form-group\">\n      <label>City</label>\n      <input type=\"text\" class=\"form-control\" formControlName=\"city\" />\n      <div class=\"alert alert-danger\" [hidden]=\"customerForm.controls.city.untouched || customerForm.controls.city.valid\">City is required</div>\n    </div>\n    <div class=\"form-group\">\n      <label>State</label>\n      <select class=\"form-control\" formControlName=\"stateId\">\n          <option *ngFor=\"let state of states\" [ngValue]=\"state.id\">{{state.name}}</option>\n      </select>\n    </div>\n    <br />\n\n    <div *ngIf=\"customer\">\n      <div class=\"alert alert-warning\" *ngIf=\"customer.id && deleteMessageEnabled\">\n         Delete Customer?&nbsp;&nbsp;<button class=\"btn btn-danger\" (click)=\"delete($event)\">Yes</button>&nbsp;&nbsp;\n         <button class=\"btn btn-default\" (click)=\"deleteMessageEnabled = false\">No</button>\n      </div>\n      <button class=\"btn btn-danger\" *ngIf=\"customer.id && !deleteMessageEnabled\" (click)=\"deleteMessageEnabled = true\">Delete</button>&nbsp;&nbsp;\n\n      <div class=\"pull-right\" *ngIf=\"!deleteMessageEnabled\">\n        <button class=\"btn btn-default\" (click)=\"cancel($event)\">Cancel</button>&nbsp;&nbsp;\n        <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!customerForm.valid\">{{ operationText }}</button>\n      </div>\n    </div>\n    <br />\n    <br />\n    <div class=\"alert alert-danger\" *ngIf=\"errorMessage != null\">{{ errorMessage }}</div>\n\n  </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { DataService } from '../core/data.service';\nimport { ICustomer, IState } from '../shared/interfaces';\nimport { ValidationService } from '../shared/validation.service';\n\n@Component({\n  selector: 'customer-edit-reactive',\n  templateUrl: './customer-edit-reactive.component.html'\n})\nexport class CustomerEditReactiveComponent implements OnInit {\n\n  customerForm: FormGroup;\n  customer: ICustomer = {\n    firstName: '',\n    lastName: '',\n    gender: '',\n    address: '',\n    email: '',\n    city: '',\n    stateId: 0,\n    zip: 0\n  };\n  states: IState[];\n  errorMessage: string;\n  deleteMessageEnabled: boolean;\n  operationText: string = 'Insert';\n  \n  constructor(private router: Router, \n              private route: ActivatedRoute, \n              private dataService: DataService,\n              private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    let id = this.route.snapshot.params['id'];\n    if (id !== '0') {\n      this.operationText = 'Update';\n      this.getCustomer(id);\n    }\n\n    this.getStates();\n    this.buildForm();\n  }\n\n  getCustomer(id: string) {\n      this.dataService.getCustomer(id)\n        .subscribe((customer: ICustomer) => {\n          this.customer = customer;\n          this.buildForm();\n        },\n        (err) => console.log(err));\n  }\n\n  buildForm() {\n      this.customerForm = this.formBuilder.group({\n        firstName:  [this.customer.firstName, Validators.required],\n        lastName:   [this.customer.lastName, Validators.required],\n        gender:     [this.customer.gender, Validators.required],\n        email:      [this.customer.email, [Validators.required, ValidationService.emailValidator]],\n        address:    [this.customer.address, Validators.required],\n        city:       [this.customer.city, Validators.required],\n        stateId:    [this.customer.stateId, Validators.required]\n      });\n  }\n\n  getStates() {\n    this.dataService.getStates().subscribe((states: IState[]) => this.states = states);\n  }\n  \n  submit({ value, valid }: { value: ICustomer, valid: boolean }) {\n      \n      value.id = this.customer.id;\n      value.zip = this.customer.zip || 0; \n      // var customer: ICustomer = {\n      //   id: this.customer.id,\n      // };\n\n      if (value.id) {\n\n        this.dataService.updateCustomer(value)\n          .subscribe((customer: ICustomer) => {\n            if (customer) {\n              this.router.navigate(['/customers']);\n            }\n            else {\n              this.errorMessage = 'Unable to save customer';\n            }\n          },\n          (err) => console.log(err));\n\n      } else {\n\n        this.dataService.insertCustomer(value)\n          .subscribe((customer: ICustomer) => {\n            if (customer) {\n              this.router.navigate(['/customers']);\n            }\n            else {\n              this.errorMessage = 'Unable to add customer';\n            }\n          },\n          (err) => console.log(err));\n          \n      }\n  }\n  \n  cancel(event: Event) {\n    event.preventDefault();\n    this.router.navigate(['/customers']);\n  }\n\n  delete(event: Event) {\n    event.preventDefault();\n    this.dataService.deleteCustomer(this.customer.id)\n        .subscribe((status: boolean) => {\n          if (status) {\n            this.router.navigate(['/customers']);\n          }\n          else {\n            this.errorMessage = 'Unable to delete customer';\n          }\n        },\n        (err) => console.log(err));\n  }\n\n}","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { DataService } from '../core/data.service';\nimport { ICustomer, IState } from '../shared/interfaces';\n\n@Component({\n  selector: 'customer-edit',\n  templateUrl: './customer-edit.component.html'\n})\nexport class CustomerEditComponent implements OnInit {\n\n  customer: ICustomer = {\n    firstName: '',\n    lastName: '',\n    gender: '',\n    address: '',\n    email: '',\n    city: '',\n    zip: 0\n  };\n  states: IState[];\n  errorMessage: string;\n  deleteMessageEnabled: boolean;\n  operationText: string = 'Insert';\n  \n  constructor(private router: Router, \n              private route: ActivatedRoute, \n              private dataService: DataService) { }\n\n  ngOnInit() {\n    let id = this.route.snapshot.params['id'];\n    if (id !== '0') {\n      this.operationText = 'Update';\n      this.getCustomer(id);\n    }\n\n    this.getStates();\n  }\n\n  getCustomer(id: string) {\n      this.dataService.getCustomer(id)\n        .subscribe((customer: ICustomer) => {\n          this.customer = customer;\n        },\n        (err: any) => console.log(err));\n  }\n\n  getStates() {\n    this.dataService.getStates().subscribe((states: IState[]) => this.states = states);\n  }\n  \n  submit() {\n\n      if (this.customer.id) {\n\n        this.dataService.updateCustomer(this.customer)\n          .subscribe((customer: ICustomer) => {\n            if (customer) {\n              this.router.navigate(['/customers']);\n            } else {\n              this.errorMessage = 'Unable to save customer';\n            }\n          },\n          (err: any) => console.log(err));\n\n      } else {\n\n        this.dataService.insertCustomer(this.customer)\n          .subscribe((customer: ICustomer) => {\n            if (customer) {\n              this.router.navigate(['/customers']);\n            }\n            else {\n              this.errorMessage = 'Unable to add customer';\n            }\n          },\n          (err: any) => console.log(err));\n          \n      }\n  }\n  \n  cancel(event: Event) {\n    event.preventDefault();\n    this.router.navigate(['/']);\n  }\n\n  delete(event: Event) {\n    event.preventDefault();\n    this.dataService.deleteCustomer(this.customer.id)\n        .subscribe((status: boolean) => {\n          if (status) {\n            this.router.navigate(['/customers']);\n          }\n          else {\n            this.errorMessage = 'Unable to delete customer';\n          }\n        },\n        (err) => console.log(err));\n  }\n\n}","<div class=\"container\">\n    <div class=\"row grid-container\">\n        <div class=\"col-md-10\">\n            <div class=\"table\">\n                <table class=\"table table-striped table-hover\">\n                    <thead>\n                        <tr>\n                            <th>&nbsp;</th>\n                            <th (click)=\"sort('firstName')\">First Name</th>\n                            <th (click)=\"sort('lastName')\">Last Name</th>\n                            <th (click)=\"sort('address')\">Address</th>\n                            <th (click)=\"sort('city')\">City</th>\n                            <th (click)=\"sort('state.name')\">State</th>\n                            <th (click)=\"sort('orderTotal')\">Order Total</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let customer of customers;trackBy:trackby.customer\">\n                            <td><img src=\"assets/images/{{ customer.gender | lowercase }}.png\"\n                                    class=\"card-image\" alt=\"Customer Image\" /></td>\n                            <td><a [routerLink]=\"['/customers',customer.id]\">{{ customer.firstName | capitalize }}</a></td>\n                            <td>{{ customer.lastName | capitalize }}</td>\n                            <td>{{ customer.address }}</td>\n                            <td>{{ customer.city | trim }}</td>\n                            <td>{{ customer.state.name }}</td>\n                            <td>{{ customer.orderTotal | currency:'USD':'symbol' }}</td>\n                        </tr>\n                        <tr *ngIf=\"!customers.length\">\n                            <td>&nbsp;</td>\n                            <td colspan=\"6\">No Records Found</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, Input, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\nimport { ICustomer } from '../shared/interfaces';\nimport { Sorter } from '../core/sorter';\nimport { TrackByService } from '../core/trackby.service';\n\n@Component({ \n  selector: 'customers-grid', \n  templateUrl: './customers-grid.component.html',\n  //When using OnPush detectors, then the framework will check an OnPush \n  //component when any of its input properties changes, when it fires \n  //an event, or when an observable fires an event ~ Victor Savkin (Angular Team)\n  changeDetection: ChangeDetectionStrategy.OnPush \n})\nexport class CustomersGridComponent implements OnInit {\n\n  @Input() customers: ICustomer[] = [];\n\n  constructor(private sorter: Sorter, public trackby: TrackByService) { }\n   \n  ngOnInit() {\n\n  }\n\n  sort(prop: string) {\n      this.sorter.sort(this.customers, prop);\n  }\n\n}\n","<div class=\"customers view indent\">\n    <div class=\"container\">\n        <header>\n            <h3>\n                <span class=\"glyphicon glyphicon-user\"></span>\n                {{ title }}\n            </h3>\n        </header>\n        <br />\n        <div class=\"row\">\n            <div class=\"col-md-8\">\n                <div class=\"navbar\">\n                    <filter-textbox (changed)=\"filterChanged($event)\"></filter-textbox>\n                </div>\n            </div>\n            <div class=\"col-md-4\">\n                <a class=\"btn btn-default\" [routerLink]=\"['/customers', '0']\">Add New Customer</a>\n            </div>\n        </div>\n    \n        <customers-grid [customers]=\"filteredCustomers\"></customers-grid>\n\n        <pagination [totalItems]=\"totalRecords\" \n            [pageSize]=\"pageSize\" \n            (pageChanged)=\"pageChanged($event)\"></pagination>\n          \n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { DataFilterService } from '../core/data-filter.service';\nimport { DataService } from '../core/data.service';\nimport { ICustomer, IOrder, IPagedResults } from '../shared/interfaces';\n\n@Component({ \n  selector: 'customers', \n  templateUrl: './customers.component.html'\n})\nexport class CustomersComponent implements OnInit {\n\n  title: string;\n  customers: ICustomer[] = [];\n  filteredCustomers: ICustomer[] = [];\n\n  totalRecords: number = 0;\n  pageSize: number = 10;\n\n  constructor(private router: Router, \n              private dataService: DataService,\n              private dataFilter: DataFilterService) { }\n  \n  ngOnInit() {\n    this.title = 'Customers';\n    this.getCustomersPage(1);\n  }\n\n  filterChanged(filterText: string) {\n    if (filterText && this.customers) {\n        let props = ['firstName', 'lastName', 'address', 'city', 'state.name', 'orderTotal'];\n        this.filteredCustomers = this.dataFilter.filter(this.customers, props, filterText);\n    }\n    else {\n      this.filteredCustomers = this.customers;\n    }\n  }\n\n  pageChanged(page: number) {\n    this.getCustomersPage(page);\n  }\n\n  getCustomersPage(page: number) {\n    this.dataService.getCustomersPage((page - 1) * this.pageSize, this.pageSize)\n        .subscribe((response: IPagedResults<ICustomer[]>) => {\n          this.customers = this.filteredCustomers = response.results;\n          this.totalRecords = response.totalRecords;\n        },\n        (err: any) => console.log(err),\n        () => console.log('getCustomersPage() retrieved customers'));\n  }\n\n}","<h1 id=\"tableLabel\">Weather forecast</h1>\r\n\r\n<p>This component demonstrates fetching data from the server.</p>\r\n\r\n<p *ngIf=\"!forecasts\"><em>Loading...</em></p>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"forecasts\">\r\n  <thead>\r\n    <tr>\r\n      <th>Date</th>\r\n      <th>Temp. (C)</th>\r\n      <th>Temp. (F)</th>\r\n      <th>Summary</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let forecast of forecasts\">\r\n      <td>{{ forecast.date }}</td>\r\n      <td>{{ forecast.temperatureC }}</td>\r\n      <td>{{ forecast.temperatureF }}</td>\r\n      <td>{{ forecast.summary }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  public forecasts: WeatherForecast[];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\r\n      this.forecasts = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface WeatherForecast {\r\n  date: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n","<h1>Hello, world!</h1>\r\n<p>Welcome to your new single-page application, built with:</p>\r\n<ul>\r\n  <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\r\n  <li><a href='https://angular.io/'>Angular</a> and <a href='http://www.typescriptlang.org/'>TypeScript</a> for client-side code</li>\r\n  <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\r\n</ul>\r\n<p>To help you get started, we've also set up:</p>\r\n<ul>\r\n  <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\r\n  <li><strong>Angular CLI integration</strong>. In development mode, there's no need to run <code>ng serve</code>. It runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\r\n  <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration automatically invokes <code>ng build</code> to produce minified, ahead-of-time compiled JavaScript files.</li>\r\n</ul>\r\n<p>The <code>ClientApp</code> subdirectory is a standard Angular CLI application. If you open a command prompt in that directory, you can run any <code>ng</code> command (e.g., <code>ng test</code>), or use <code>npm</code> to install extra packages into it.</p>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n}\r\n","export class EnsureModuleLoadedOnceGuard {\n\n  constructor(targetModule: any) {\n    if (targetModule) {\n      throw new Error(`${targetModule.constructor.name} has already been loaded. Import this module in the AppModule only.`);\n    }\n  }\n\n}","\n    <form>\n         Filter:\n         <input type=\"text\" name=\"filter\"\n                [(ngModel)]=\"model.filter\" \n                (keyup)=\"filterChanged($event)\"  />\n    </form>\n  ","import { Component, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'filter-textbox',\n  template: `\n    <form>\n         Filter:\n         <input type=\"text\" name=\"filter\"\n                [(ngModel)]=\"model.filter\" \n                (keyup)=\"filterChanged($event)\"  />\n    </form>\n  `\n})\nexport class FilterTextboxComponent {\n\n  \n    model: { filter: string } = { filter: null };\n    \n    @Output()\n    changed: EventEmitter<string> = new EventEmitter<string>();\n\n    filterChanged(event: any) {\n      event.preventDefault();\n      this.changed.emit(this.model.filter); //Raise changed event\n    }\n}\n","<nav [hidden]=\"!isVisible\">\n  <ul class=\"pagination\">\n    <li [class.disabled]=\"!previousEnabled\" (click)=\"previousNext(-1, $event)\">\n      <a aria-label=\"Previous\">\n        <span aria-hidden=\"true\">&laquo;</span>\n      </a>\n    </li>\n    <li *ngFor=\"let page of pages\" (click)=\"changePage(page, $event)\" [class.active]=\"currentPage === page\">\n      <a>{{ page }}</a>\n    </li>\n    <li [class.disabled]=\"!nextEnabled\" (click)=\"previousNext(1, $event)\">\n      <a aria-label=\"Next\">\n        <span aria-hidden=\"true\">&raquo;</span>\n      </a>\n    </li>\n  </ul>\n</nav>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: [ './pagination.component.css' ]\n})\n\nexport class PaginationComponent implements OnInit {\n  \n  private pagerTotalItems: number;\n  private pagerPageSize: number;\n  \n  totalPages: number;\n  pages: number[] = [];\n  currentPage: number = 1;\n  isVisible: boolean = false;\n  previousEnabled: boolean = false;\n  nextEnabled: boolean = true;\n  \n  @Input() get pageSize():number {\n    return this.pagerPageSize;\n  }\n\n  set pageSize(size:number) {\n    this.pagerPageSize = size;\n    this.update();\n  }\n  \n  @Input() get totalItems():number {\n    return this.pagerTotalItems;\n  }\n\n  set totalItems(itemCount:number) {\n    this.pagerTotalItems = itemCount;\n    this.update();\n  }\n  \n  @Output() pageChanged: EventEmitter<number> = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() { \n\n  }\n  \n  update() {\n    if (this.pagerTotalItems && this.pagerPageSize) {\n      this.totalPages = Math.ceil(this.pagerTotalItems/this.pageSize);\n      this.isVisible = true;\n      if (this.totalItems >= this.pageSize) {\n        for (let i = 1;i < this.totalPages + 1;i++) {\n          this.pages.push(i);\n        }\n      }\n      return;\n    }\n    \n    this.isVisible = false;\n  }\n  \n  previousNext(direction: number, event?: MouseEvent) {\n    let page: number = this.currentPage;\n    if (direction == -1) {\n        if (page > 1) page--;\n    } else {\n        if (page < this.totalPages) page++;\n    }\n    this.changePage(page, event);\n  }\n  \n  changePage(page: number, event?: MouseEvent) {\n    if (event) {\n      event.preventDefault();\n    }\n    if (this.currentPage === page) return;\n    this.currentPage = page;\n    this.previousEnabled = this.currentPage > 1;\n    this.nextEnabled = this.currentPage < this.totalPages;\n    this.pageChanged.emit(page);\n  }\n\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'capitalize' })\nexport class CapitalizePipe implements PipeTransform {\n\n  transform(value: any) {\n\t  if (value) {\n      \treturn value.charAt(0).toUpperCase() + value.slice(1);\n\t  }\n\t  return value;\n  }\n\n}","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({name: 'trim'})\nexport class TrimPipe implements PipeTransform {\n  transform(value: any) {\n    if (!value) {\n      return '';\n    }\n    return value.trim();\n  }\n}","export class propertyResolver {\n     static resolve(path: string, obj: any) {\n      return path.split('.').reduce((prev, curr) => {\n          return (prev ? prev[curr] : undefined)\n      }, obj || self)\n    }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { PaginationComponent } from './pagination/pagination.component';\nimport { CapitalizePipe } from './pipes/capitalize.pipe';\nimport { TrimPipe } from './pipes/trim.pipe';\nimport { FilterTextboxComponent } from './filter-textbox/filter-textbox.component';\n\n@NgModule({\n  imports: [ CommonModule, FormsModule, ReactiveFormsModule ],\n  declarations: [CapitalizePipe, TrimPipe, FilterTextboxComponent, PaginationComponent ],\n  exports: [ CommonModule, FormsModule, ReactiveFormsModule, CapitalizePipe, TrimPipe, FilterTextboxComponent, PaginationComponent ]\n})\nexport class SharedModule { }\n","//Original version created by Cory Rylan: https://coryrylan.com/blog/angular-2-form-builder-and-validation-management\nimport { AbstractControl } from '@angular/forms';\n\nexport class ValidationService {\n     \n    static getValidatorErrorMessage(code: string) {\n        let config = {\n            'required': 'Required',\n            'invalidCreditCard': 'Is invalid credit card number',\n            'invalidEmailAddress': 'Invalid email address',\n            'invalidPassword': 'Invalid password. Password must be at least 6 characters long, and contain a number.'\n        };\n        return config[code];\n    }\n\n    static creditCardValidator(control: AbstractControl) {\n        // Visa, MasterCard, American Express, Diners Club, Discover, JCB\n        if (control.value.match(/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/)) {\n            return null;\n        } else {\n            return { 'invalidCreditCard': true };\n        }\n    }\n     \n    static emailValidator(control: AbstractControl) {\n        // RFC 2822 compliant regex\n        if (control.value.match(/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/)) {\n            return null;\n        } else {\n            return { 'invalidEmailAddress': true };\n        }\n    }\n     \n    static passwordValidator(control: AbstractControl) {\n        // {6,100}           - Assert password is between 6 and 100 characters\n        // (?=.*[0-9])       - Assert a string has at least one number\n        if (control.value.match(/^(?=.*[0-9])[a-zA-Z0-9!@#$%^&*]{6,100}$/)) {\n            return null;\n        } else {\n            return { 'invalidPassword': true };\n        }\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: '/api/'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":"webpack:///"}